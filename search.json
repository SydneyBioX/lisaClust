[{"path":"https://github.com/ellispatrick/lisaClust/articles/lisaClust.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"Introduction to Clustering of Local Indicators of Spatial Assocation (LISA) curves","text":"","code":"if (!require(\"BiocManager\"))     install.packages(\"BiocManager\") BiocManager::install(\"lisaClust\") # load required packages library(lisaClust) library(spicyR) library(ggplot2) library(SingleCellExperiment)"},{"path":"https://github.com/ellispatrick/lisaClust/articles/lisaClust.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"Introduction to Clustering of Local Indicators of Spatial Assocation (LISA) curves","text":"Clustering local indicators spatial association (LISA) functions methodology identifying consistent spatial organisation multiple cell-types unsupervised way. can used enable characterization interactions multiple cell-types simultaneously can complement traditional pairwise analysis. implementation LISA curves localised summary L-function Poisson point process model. framework lisaClust can used provide high-level summary cell-type colocalization high-parameter spatial cytometry data, facilitating identification distinct tissue compartments identification complex cellular microenvironments.","code":""},{"path":[]},{"path":"https://github.com/ellispatrick/lisaClust/articles/lisaClust.html","id":"generate-toy-data","dir":"Articles","previous_headings":"Quick start","what":"Generate toy data","title":"Introduction to Clustering of Local Indicators of Spatial Assocation (LISA) curves","text":"illustrate lisaClust framework, consider simple toy example two cell-types completely separated spatially. simulate data two different images.","code":"set.seed(51773) x <- round(c(runif(200),runif(200)+1,runif(200)+2,runif(200)+3,            runif(200)+3,runif(200)+2,runif(200)+1,runif(200)),4)*100 y <- round(c(runif(200),runif(200)+1,runif(200)+2,runif(200)+3,              runif(200),runif(200)+1,runif(200)+2,runif(200)+3),4)*100 cellType <- factor(paste('c',rep(rep(c(1:2),rep(200,2)),4),sep = '')) imageID <- rep(c('s1', 's2'),c(800,800))  cells <- data.frame(x, y, cellType, imageID)  ggplot(cells, aes(x,y, colour = cellType)) + geom_point() + facet_wrap(~imageID) + theme_minimal()"},{"path":"https://github.com/ellispatrick/lisaClust/articles/lisaClust.html","id":"create-single-cell-experiment-object","dir":"Articles","previous_headings":"Quick start","what":"Create Single Cell Experiment object","title":"Introduction to Clustering of Local Indicators of Spatial Assocation (LISA) curves","text":"First store data SingleCellExperiment object.","code":"SCE <- SingleCellExperiment(colData = cells) SCE ## class: SingleCellExperiment  ## dim: 0 1600  ## metadata(0): ## assays(0): ## rownames: NULL ## rowData names(0): ## colnames: NULL ## colData names(4): x y cellType imageID ## reducedDimNames(0): ## mainExpName: NULL ## altExpNames(0):"},{"path":"https://github.com/ellispatrick/lisaClust/articles/lisaClust.html","id":"running-lisaclust","dir":"Articles","previous_headings":"Quick start","what":"Running lisaCLust","title":"Introduction to Clustering of Local Indicators of Spatial Assocation (LISA) curves","text":"can use convenience function lisaClust simultaneously calculate local indicators spatial association (LISA) functions using lisa function perform k-means clustering. number clusters can specified k = parameter. example , ’ve chosen k = 2, resulting total 2 clusters. clusters stored colData SingleCellExperiment object, new column column name regions.","code":"SCE <- lisaClust(SCE, k = 2) colData(SCE) |> head() ## DataFrame with 6 rows and 5 columns ##           x         y cellType     imageID      region ##   <numeric> <numeric> <factor> <character> <character> ## 1     36.72     38.58       c1          s1    region_2 ## 2     61.38     41.29       c1          s1    region_2 ## 3     33.59     80.98       c1          s1    region_2 ## 4     50.17     64.91       c1          s1    region_2 ## 5     82.93     35.60       c1          s1    region_2 ## 6     83.13      2.69       c1          s1    region_2"},{"path":"https://github.com/ellispatrick/lisaClust/articles/lisaClust.html","id":"plot-identified-regions","dir":"Articles","previous_headings":"Quick start","what":"Plot identified regions","title":"Introduction to Clustering of Local Indicators of Spatial Assocation (LISA) curves","text":"lisaClust also provides convenient hatchingPlot function visualise different regions demarcated clustering. hatchingPlot outputs ggplot object regions marked different hatching patterns. real biological dataset, allows us plot regions cell-types visualization. example , can visualise stimulated data 2 cell types separated neatly 2 distinct regions based cell type region dominated . region_2 dominated red cell type c1, region_1 dominated blue cell type c2. ## Using clustering methods. lisaClust function convenient, implemented exhaustive suite clustering methods easy . just two simple steps.","code":"hatchingPlot(SCE, useImages = c('s1','s2'))"},{"path":"https://github.com/ellispatrick/lisaClust/articles/lisaClust.html","id":"generate-lisa-curves","dir":"Articles","previous_headings":"Quick start > Plot identified regions","what":"Generate LISA curves","title":"Introduction to Clustering of Local Indicators of Spatial Assocation (LISA) curves","text":"can calculate local indicators spatial association (LISA) functions using lisa function. LISA curves localised summary L-function Poisson point process model. radii calculated can set Rs.","code":"lisaCurves <- lisa(SCE, Rs = c(20, 50, 100))"},{"path":"https://github.com/ellispatrick/lisaClust/articles/lisaClust.html","id":"perform-some-clustering","dir":"Articles","previous_headings":"Quick start > Plot identified regions","what":"Perform some clustering","title":"Introduction to Clustering of Local Indicators of Spatial Assocation (LISA) curves","text":"LISA curves can used cluster cells. use k-means clustering, clustering methods like SOM used. can store cell clusters cell “regions” SingleCellExperiment object using cellAnnotation() <- function.","code":"# Custom clustering algorithm kM <- kmeans(lisaCurves,2)  # Storing clusters into colData colData(SCE)$custom_region <- paste('region',kM$cluster,sep = '_') colData(SCE) |> head() ## DataFrame with 6 rows and 6 columns ##           x         y cellType     imageID      region custom_region ##   <numeric> <numeric> <factor> <character> <character>   <character> ## 1     36.72     38.58       c1          s1    region_2      region_2 ## 2     61.38     41.29       c1          s1    region_2      region_2 ## 3     33.59     80.98       c1          s1    region_2      region_2 ## 4     50.17     64.91       c1          s1    region_2      region_2 ## 5     82.93     35.60       c1          s1    region_2      region_2 ## 6     83.13      2.69       c1          s1    region_2      region_2"},{"path":"https://github.com/ellispatrick/lisaClust/articles/lisaClust.html","id":"damond-et-al--islet-data-","dir":"Articles","previous_headings":"","what":"Damond et al. islet data.","title":"Introduction to Clustering of Local Indicators of Spatial Assocation (LISA) curves","text":"Next, apply lisaClust framework three images pancreatic islets Map Human Type 1 Diabetes Progression Imaging Mass Cytometry Damond et al. (2019).","code":""},{"path":"https://github.com/ellispatrick/lisaClust/articles/lisaClust.html","id":"read-in-data","dir":"Articles","previous_headings":"Damond et al. islet data.","what":"Read in data","title":"Introduction to Clustering of Local Indicators of Spatial Assocation (LISA) curves","text":"start reading data storing SingleCellExperiment object. data format consistent outputted CellProfiler.","code":"isletFile <- system.file(\"extdata\",\"isletCells.txt.gz\", package = \"spicyR\") cells <- read.table(isletFile, header = TRUE) damonSCE <- SingleCellExperiment(assay = list(intensities = t(cells[,grepl(names(cells), pattern = \"Intensity_\")])),                                  colData = cells[,!grepl(names(cells), pattern = \"Intensity_\")]                                  )"},{"path":"https://github.com/ellispatrick/lisaClust/articles/lisaClust.html","id":"cluster-cell-types","dir":"Articles","previous_headings":"Damond et al. islet data.","what":"Cluster cell-types","title":"Introduction to Clustering of Local Indicators of Spatial Assocation (LISA) curves","text":"data include annotation cell-types cell. extract marker intensities SingleCellExperiment object using assay(). perform k-means clustering 10 clusters store cell-type clusters SingleCellExperiment object using colData() <-.","code":"markers <- t(assay(damonSCE, \"intensities\")) kM <- kmeans(markers,10) colData(damonSCE)$cluster <- paste('cluster', kM$cluster, sep = '') colData(damonSCE)[, c(\"ImageNumber\", \"cluster\")] |> head() ## DataFrame with 6 rows and 2 columns ##   ImageNumber     cluster ##     <integer> <character> ## 1           1    cluster9 ## 2           1    cluster9 ## 3           1    cluster9 ## 4           1    cluster5 ## 5           1    cluster5 ## 6           1    cluster2"},{"path":"https://github.com/ellispatrick/lisaClust/articles/lisaClust.html","id":"generate-lisa-curves-1","dir":"Articles","previous_headings":"Damond et al. islet data.","what":"Generate LISA curves","title":"Introduction to Clustering of Local Indicators of Spatial Assocation (LISA) curves","text":", can perform k-means clustering local indicators spatial association (LISA) functions using lisaClust function, remembering specify imageID, cellType, spatialCoords columns colData. regions stored colData can extracted.","code":"damonSCE <- lisaClust(damonSCE,                        k = 2,                        Rs = c(10,20,50),                        imageID = \"ImageNumber\",                        cellType = \"cluster\",                       spatialCoords = c(\"Location_Center_X\", \"Location_Center_Y\")) colData(damonSCE)[, c(\"ImageNumber\", \"region\")] |>   head(20) ## DataFrame with 20 rows and 2 columns ##     ImageNumber      region ##       <integer> <character> ## 1             1    region_1 ## 2             1    region_1 ## 3             1    region_1 ## 4             1    region_1 ## 5             1    region_1 ## ...         ...         ... ## 16            1    region_1 ## 17            1    region_1 ## 18            1    region_1 ## 19            1    region_1 ## 20            1    region_1"},{"path":"https://github.com/ellispatrick/lisaClust/articles/lisaClust.html","id":"examine-cell-type-enrichment","dir":"Articles","previous_headings":"Damond et al. islet data.","what":"Examine cell type enrichment","title":"Introduction to Clustering of Local Indicators of Spatial Assocation (LISA) curves","text":"lisaClust also provides convenient function, regionMap, examining cell types located regions. example, use check cell types appear frequently region expected chance. , clearly see clusters 2, 5, 1, 8 highly concentrated region 1, whilst clusters thinly spread across region 2. can segregate cells increasing number clusters, ie. increasing parameter k = lisaClust() function, purposes demonstration, let’s take look hatchingPlot regions.","code":"regionMap(damonSCE,            imageID = \"ImageNumber\",            cellType = \"cluster\",           spatialCoords = c(\"Location_Center_X\", \"Location_Center_Y\"),           type = \"bubble\")"},{"path":"https://github.com/ellispatrick/lisaClust/articles/lisaClust.html","id":"plot-identified-regions-1","dir":"Articles","previous_headings":"Damond et al. islet data.","what":"Plot identified regions","title":"Introduction to Clustering of Local Indicators of Spatial Assocation (LISA) curves","text":"Finally, can use hatchingPlot construct ggplot object regions marked different hatching patterns. allows us visualize two regions ten cell-types simultaneously.","code":"hatchingPlot(damonSCE,               cellType = \"cluster\",              spatialCoords = c(\"Location_Center_X\", \"Location_Center_Y\"))"},{"path":"https://github.com/ellispatrick/lisaClust/articles/lisaClust.html","id":"sessioninfo","dir":"Articles","previous_headings":"","what":"sessionInfo()","title":"Introduction to Clustering of Local Indicators of Spatial Assocation (LISA) curves","text":"","code":"sessionInfo() ## R version 4.3.1 (2023-06-16) ## Platform: x86_64-pc-linux-gnu (64-bit) ## Running under: EndeavourOS ##  ## Matrix products: default ## BLAS:   /usr/lib/libblas.so.3.11.0  ## LAPACK: /usr/lib/liblapack.so.3.11.0 ##  ## locale: ##  [1] LC_CTYPE=en_AU.UTF-8       LC_NUMERIC=C               ##  [3] LC_TIME=en_AU.UTF-8        LC_COLLATE=en_AU.UTF-8     ##  [5] LC_MONETARY=en_AU.UTF-8    LC_MESSAGES=en_AU.UTF-8    ##  [7] LC_PAPER=en_AU.UTF-8       LC_NAME=C                  ##  [9] LC_ADDRESS=C               LC_TELEPHONE=C             ## [11] LC_MEASUREMENT=en_AU.UTF-8 LC_IDENTIFICATION=C        ##  ## time zone: Australia/Sydney ## tzcode source: system (glibc) ##  ## attached base packages: ## [1] stats4    stats     graphics  grDevices utils     datasets  methods   ## [8] base      ##  ## other attached packages: ##  [1] SingleCellExperiment_1.22.0 SummarizedExperiment_1.30.2 ##  [3] Biobase_2.60.0              GenomicRanges_1.52.1        ##  [5] GenomeInfoDb_1.36.4         IRanges_2.34.1              ##  [7] S4Vectors_0.38.2            BiocGenerics_0.46.0         ##  [9] MatrixGenerics_1.12.3       matrixStats_1.0.0           ## [11] ggplot2_3.4.4               spicyR_1.12.2               ## [13] lisaClust_1.8.1             BiocStyle_2.28.1            ##  ## loaded via a namespace (and not attached): ##   [1] RColorBrewer_1.1-3          jsonlite_1.8.7              ##   [3] MultiAssayExperiment_1.26.0 magrittr_2.0.3              ##   [5] spatstat.utils_3.0-3        magick_2.7.5                ##   [7] nloptr_2.0.3                farver_2.1.1                ##   [9] rmarkdown_2.24              fs_1.6.3                    ##  [11] zlibbioc_1.46.0             ragg_1.2.5                  ##  [13] vctrs_0.6.4                 minqa_1.2.6                 ##  [15] memoise_2.0.1               spatstat.explore_3.2-3      ##  [17] DelayedMatrixStats_1.22.6   RCurl_1.98-1.12             ##  [19] rstatix_0.7.2               htmltools_0.5.6             ##  [21] S4Arrays_1.0.6              curl_5.0.2                  ##  [23] broom_1.0.5                 Rhdf5lib_1.22.1             ##  [25] rhdf5_2.44.0                sass_0.4.7                  ##  [27] bslib_0.5.1                 desc_1.4.2                  ##  [29] plyr_1.8.9                  cachem_1.0.8                ##  [31] lifecycle_1.0.3             pkgconfig_2.0.3             ##  [33] Matrix_1.6-1                R6_2.5.1                    ##  [35] fastmap_1.1.1               GenomeInfoDbData_1.2.10     ##  [37] numDeriv_2016.8-1.1         digest_0.6.33               ##  [39] colorspace_2.1-0            rprojroot_2.0.3             ##  [41] tensor_1.5                  dqrng_0.3.1                 ##  [43] textshaping_0.3.6           ggpubr_0.6.0                ##  [45] beachmat_2.16.0             labeling_0.4.3              ##  [47] fansi_1.0.5                 spatstat.sparse_3.0-2       ##  [49] mgcv_1.8-42                 polyclip_1.10-4             ##  [51] abind_1.4-5                 compiler_4.3.1              ##  [53] withr_2.5.1                 backports_1.4.1             ##  [55] BiocParallel_1.34.2         carData_3.0-5               ##  [57] HDF5Array_1.28.1            ggforce_0.4.1               ##  [59] R.utils_2.12.2              ggsignif_0.6.4              ##  [61] MASS_7.3-60                 concaveman_1.1.0            ##  [63] DelayedArray_0.26.7         rjson_0.2.21                ##  [65] tools_4.3.1                 goftest_1.2-3               ##  [67] R.oo_1.25.0                 glue_1.6.2                  ##  [69] nlme_3.1-162                rhdf5filters_1.12.1         ##  [71] grid_4.3.1                  ClassifyR_3.4.11            ##  [73] reshape2_1.4.4              generics_0.1.3              ##  [75] gtable_0.3.4                spatstat.data_3.0-1         ##  [77] R.methodsS3_1.8.2           class_7.3-22                ##  [79] tidyr_1.3.0                 data.table_1.14.8           ##  [81] car_3.1-2                   utf8_1.2.4                  ##  [83] XVector_0.40.0              spatstat.geom_3.2-5         ##  [85] pillar_1.9.0                stringr_1.5.0               ##  [87] limma_3.56.2                splines_4.3.1               ##  [89] dplyr_1.1.3                 tweenr_2.0.2                ##  [91] lattice_0.21-8              survival_3.5-7              ##  [93] deldir_1.0-9                tidyselect_1.2.0            ##  [95] locfit_1.5-9.8              scuttle_1.10.3              ##  [97] knitr_1.44                  V8_4.3.3                    ##  [99] bookdown_0.35               edgeR_3.42.4                ## [101] xfun_0.40                   DropletUtils_1.20.0         ## [103] pheatmap_1.0.12             fftwtools_0.9-11            ## [105] scam_1.2-14                 stringi_1.7.12              ## [107] boot_1.3-28.1               yaml_2.3.7                  ## [109] evaluate_0.21               codetools_0.2-19            ## [111] tibble_3.2.1                BiocManager_1.30.22         ## [113] cli_3.6.1                   systemfonts_1.0.4           ## [115] munsell_0.5.0               jquerylib_0.1.4             ## [117] Rcpp_1.0.11                 spatstat.random_3.1-6       ## [119] parallel_4.3.1              pkgdown_2.0.7               ## [121] sparseMatrixStats_1.12.2    bitops_1.0-7                ## [123] lme4_1.1-34                 SpatialExperiment_1.10.0    ## [125] lmerTest_3.1-3              scales_1.2.1                ## [127] purrr_1.0.2                 crayon_1.5.2                ## [129] rlang_1.1.1"},{"path":"https://github.com/ellispatrick/lisaClust/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Ellis Patrick. Author, maintainer. Nicolas Canete. Author.","code":""},{"path":"https://github.com/ellispatrick/lisaClust/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Patrick E, Canete N (2023). lisaClust: lisaClust: Clustering Local Indicators Spatial Association. https://ellispatrick.github.io/lisaClust/, https://github.com/ellispatrick/lisaClust.","code":"@Manual{,   title = {lisaClust: lisaClust: Clustering of Local Indicators of Spatial Association},   author = {Ellis Patrick and Nicolas Canete},   year = {2023},   note = {https://ellispatrick.github.io/lisaClust/, https://github.com/ellispatrick/lisaClust}, }"},{"path":"https://github.com/ellispatrick/lisaClust/index.html","id":"lisaclust","dir":"","previous_headings":"","what":"lisaClust: Clustering of Local Indicators of Spatial Association","title":"lisaClust: Clustering of Local Indicators of Spatial Association","text":"Clustering Local Indicators Spatial Association","code":""},{"path":"https://github.com/ellispatrick/lisaClust/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"lisaClust: Clustering of Local Indicators of Spatial Association","text":"lisaClust provides series functions identify visualise regions tissue spatial associations cell-types similar. package can used provide high-level summary cell-type colocalisation multiplexed imaging data segmented single-cell resolution.","code":""},{"path":"https://github.com/ellispatrick/lisaClust/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"lisaClust: Clustering of Local Indicators of Spatial Association","text":"Bioconductor release version, run following. like --date features, install recent development version.","code":"if (!require(\"BiocManager\", quietly = TRUE))     install.packages(\"BiocManager\")  BiocManager::install(\"lisaClust\") # Install the development version from Bioconductor: if (!require(\"BiocManager\", quietly = TRUE))     install.packages(\"BiocManager\")  # The following initializes usage of Bioc devel # This will update all your Bioconductor packages to devel version BiocManager::install(version='devel')  BiocManager::install(\"lisaClust\")  # Otherwise install the development version from GitHub: # install.packages(\"devtools\") devtools::install_github(\"ellispatrick/lisaClust\") library(lisaClust)"},{"path":"https://github.com/ellispatrick/lisaClust/index.html","id":"submitting-an-issue-or-feature-request","dir":"","previous_headings":"","what":"Submitting an issue or feature request","title":"lisaClust: Clustering of Local Indicators of Spatial Association","text":"listClust still active development. greatly appreciate feedback related package. R package related issues raised . general questions feedback, please contact us directly via ellis.patrick@sydney.edu.au.","code":""},{"path":"https://github.com/ellispatrick/lisaClust/index.html","id":"authors","dir":"","previous_headings":"","what":"Authors","title":"lisaClust: Clustering of Local Indicators of Spatial Association","text":"Nicolas Canete Ellis Patrick - @TheEllisPatrick","code":""},{"path":"https://github.com/ellispatrick/lisaClust/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"lisaClust: Clustering of Local Indicators of Spatial Association","text":"Patrick, E, Canete, NP, Iyengar, SS, Harman, , Sutherland, GT, Yang, P. Spatial analysis highly multiplexed imaging data identify tissue microenvironments. Cytometry. 2023. https://doi.org/10.1002/cyto..24729","code":""},{"path":"https://github.com/ellispatrick/lisaClust/reference/hatchingPlot.html","id":null,"dir":"Reference","previous_headings":"","what":"hatchingPlot — hatchingPlot","title":"hatchingPlot — hatchingPlot","text":"hatchingPlot() function used create hatching patterns representating  spatial regions cell-types. hatching geom used create hatching patterns representation spatial regions.","code":""},{"path":"https://github.com/ellispatrick/lisaClust/reference/hatchingPlot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"hatchingPlot — hatchingPlot","text":"","code":"hatchingPlot(   data,   useImages = NULL,   region = \"region\",   imageID = \"imageID\",   cellType = \"cellType\",   spatialCoords = c(\"x\", \"y\"),   window = \"concave\",   line.spacing = 21,   hatching.colour = 1,   nbp = 50,   window.length = NULL )  geom_hatching(   mapping = NULL,   data = NULL,   stat = \"identity\",   position = \"identity\",   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE,   line.spacing = 21,   hatching.colour = 1,   window = \"concave\",   window.length = NULL,   nbp = 250,   line.width = 1,   ... )"},{"path":"https://github.com/ellispatrick/lisaClust/reference/hatchingPlot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"hatchingPlot — hatchingPlot","text":"data data displayed layer. three options: NULL, default, data inherited plot data specified  call ggplot(). data.frame, object, override plot  data. objects fortified produce data frame. See fortify()  variables created. function called single argument,   plot data. return value must data.frame, used   layer data. function can created formula (e.g. ~ head(.x, 10)). useImages vector images plot. region region column plot. imageID imageIDs column using data.frame SingleCellExperiment. cellType cellType column using data.frame SingleCellExperiment. spatialCoords spatial coordinates columns using data.frame SingleCellExperiment. window window around regions 'square', 'convex' 'concave'. line.spacing integer indicating spacing hatching lines. hatching.colour colour hatching. nbp integer tuning granularity grid used defining regions window.length tuning parameter controlling level concavity  estimating concave windows. mapping Set aesthetic mappings created aes() aes_(). specified  inherit.aes = TRUE (default), combined default mapping  top level plot. must supply mapping plot mapping. stat statistical transformation use data layer string. position adjustment, either string, result call  position adjustment function. na.rm FALSE, default, missing values removed warning.  TRUE, missing values silently removed. show.legend logical. layer included legends? NA,  default, includes aesthetics mapped. FALSE never includes,  TRUE always includes. can also named logical vector finely select  aesthetics display. inherit.aes FALSE, overrides default aesthetics, rather  combining . useful helper functions define  data aesthetics inherit behaviour default plot  specification, e.g. borders(). line.width numeric controlling width hatching lines ... arguments passed layer(). often aesthetics,  used set aesthetic fixed value, like colour = \"red\" size = 3.  may also parameters paired geom/stat.","code":""},{"path":"https://github.com/ellispatrick/lisaClust/reference/hatchingPlot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"hatchingPlot — hatchingPlot","text":"ggplot object ggplot geom","code":""},{"path":"https://github.com/ellispatrick/lisaClust/reference/hatchingPlot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"hatchingPlot — hatchingPlot","text":"","code":"library(spicyR) ## Generate toy data set.seed(51773) x <- round(c(runif(200),runif(200)+1,runif(200)+2,runif(200)+3,              runif(200)+3,runif(200)+2,runif(200)+1,runif(200)),4)*100  y <- round(c(runif(200),runif(200)+1,runif(200)+2,runif(200)+3,               runif(200),runif(200)+1,runif(200)+2,runif(200)+3),4)*100 cellType <- factor(paste('c',rep(rep(c(1:2),rep(200,2)),4),sep = '')) imageID <- rep(c('s1', 's2'),c(800,800)) cells <- data.frame(x, y, cellType, imageID)  ## Store data in SegmentedCells object cellExp <- SegmentedCells(cells, cellTypeString = 'cellType') #> There is no cellID. I'll create these #> There is no image specific imageCellID. I'll create these  ## Generate regions cellExp <- lisaClust(cellExp, k = 2) #> Generating local L-curves. If you run out of memory, try 'fast = FALSE'. #> Creating variable region  ## Plot regions hatchingPlot(cellExp) #> Concave windows are temperamental. Try choosing values of window.length > and < 1 if you have problems.     library(ggplot2)  # Extract the region information along with x-y coordinates df <- as.data.frame(cellSummary(cellExp))  # Plot the regions with geom_hatching() p <- ggplot(df,aes(x = x,y = y, colour = cellType, region = region)) + geom_point() + facet_wrap(~imageID) + geom_hatching()"},{"path":"https://github.com/ellispatrick/lisaClust/reference/inhomLocalK.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the inhomogenous local K function. — inhomLocalK","title":"Calculate the inhomogenous local K function. — inhomLocalK","text":"Calculate inhomogenous local K function.","code":""},{"path":"https://github.com/ellispatrick/lisaClust/reference/inhomLocalK.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the inhomogenous local K function. — inhomLocalK","text":"","code":"inhomLocalK(   data,   Rs = c(20, 50, 100, 200),   sigma = 10000,   window = \"convex\",   window.length = NULL,   minLambda = 0.05,   lisaFunc = \"K\" )"},{"path":"https://github.com/ellispatrick/lisaClust/reference/inhomLocalK.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the inhomogenous local K function. — inhomLocalK","text":"data data. Rs vector radii measures association calculated. sigma numeric variable used scaling filting inhomogeneous L-curves. window window around regions 'square', 'convex' 'concave'. window.length tuning parameter controlling level concavity. minLambda Minimum value density scaling fitting inhomogeneous L-curves. lisaFunc Either \"K\" \"L\" curve.","code":""},{"path":"https://github.com/ellispatrick/lisaClust/reference/inhomLocalK.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the inhomogenous local K function. — inhomLocalK","text":"matrix LISA curves","code":""},{"path":"https://github.com/ellispatrick/lisaClust/reference/inhomLocalK.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the inhomogenous local K function. — inhomLocalK","text":"","code":"library(spicyR) # Read in data as a SegmentedCells objects isletFile <- system.file(\"extdata\", \"isletCells.txt.gz\", package = \"spicyR\") cells <- read.table(isletFile, header = TRUE) cells$x <- cells$AreaShape_Center_X cells$y <- cells$AreaShape_Center_Y cells$cellType <- as.factor(sample(     c(\"big\", \"medium\", \"small\"),     length(cells$AreaShape_Center_Y),     replace = TRUE )) cells$cellID <- as.factor(cells$ObjectNumber)  inhom <- inhomLocalK(cells[1:100,])"},{"path":"https://github.com/ellispatrick/lisaClust/reference/lisa.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate local indicators of spatial association — lisa","title":"Generate local indicators of spatial association — lisa","text":"Generate local indicators spatial association","code":""},{"path":"https://github.com/ellispatrick/lisaClust/reference/lisa.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate local indicators of spatial association — lisa","text":"","code":"lisa(   cells,   Rs = NULL,   BPPARAM = BiocParallel::SerialParam(),   window = \"convex\",   window.length = NULL,   whichParallel = \"imageID\",   sigma = NULL,   lisaFunc = \"K\",   minLambda = 0.05,   fast = TRUE,   spatialCoords = c(\"x\", \"y\"),   cellType = \"cellType\",   imageID = \"imageID\" )"},{"path":"https://github.com/ellispatrick/lisaClust/reference/lisa.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate local indicators of spatial association — lisa","text":"cells SegmentedCells, SingleCellExperiment, SpatialExperiment data frame contains least  variables x y, giving  coordinates cell, imageID cellType. Rs vector radii measures association calculated. BPPARAM BiocParallelParam object. window window around regions 'square', 'convex' 'concave'. window.length tuning parameter controlling level concavity  estimating concave windows. whichParallel function use parallization imageID  cellType. sigma numeric variable used scaling filting inhomogeneous L-curves. lisaFunc Either \"K\" \"L\" curve. minLambda Minimum value density scaling fitting inhomogeneous L-curves. fast logical describing whether use fast approximation  inhomogeneous local L-curves. spatialCoords columns contain x y spatial coordinates. cellType column contains cell types. imageID column contains image identifiers.","code":""},{"path":"https://github.com/ellispatrick/lisaClust/reference/lisa.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate local indicators of spatial association — lisa","text":"matrix LISA curves","code":""},{"path":"https://github.com/ellispatrick/lisaClust/reference/lisa.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate local indicators of spatial association — lisa","text":"","code":"library(spicyR) # Read in data as a SegmentedCells objects isletFile <- system.file(\"extdata\",\"isletCells.txt.gz\", package = \"spicyR\") cells <- read.table(isletFile, header=TRUE) cellExp <- SegmentedCells(cells, cellProfiler = TRUE) #> There is no cellType column, setting to NA  # Cluster cell types markers <- cellMarks(cellExp) kM <- kmeans(markers,8) cellType(cellExp) <- paste('cluster',kM$cluster, sep = '')  # Generate LISA lisaCurves <- lisa(cellExp) #> Generating local L-curves. If you run out of memory, try 'fast = FALSE'.  # Cluster the LISA curves kM <- kmeans(lisaCurves,2) cellAnnotation(cellExp, \"region\") <- paste('region',kM$cluster,sep = '_') #> Creating variable region"},{"path":"https://github.com/ellispatrick/lisaClust/reference/lisaClust.html","id":null,"dir":"Reference","previous_headings":"","what":"Use k-means clustering to cluster local indicators of spatial association. For other clustering use lisa. — lisaClust","title":"Use k-means clustering to cluster local indicators of spatial association. For other clustering use lisa. — lisaClust","text":"Use k-means clustering cluster local indicators spatial association. clustering use lisa.","code":""},{"path":"https://github.com/ellispatrick/lisaClust/reference/lisaClust.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use k-means clustering to cluster local indicators of spatial association. For other clustering use lisa. — lisaClust","text":"","code":"lisaClust(   cells,   k = 2,   Rs = NULL,   spatialCoords = c(\"x\", \"y\"),   cellType = \"cellType\",   imageID = \"imageID\",   regionName = \"region\",   BPPARAM = BiocParallel::SerialParam(),   window = \"convex\",   window.length = NULL,   whichParallel = \"imageID\",   sigma = NULL,   lisaFunc = \"K\",   minLambda = 0.05,   fast = TRUE )"},{"path":"https://github.com/ellispatrick/lisaClust/reference/lisaClust.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Use k-means clustering to cluster local indicators of spatial association. For other clustering use lisa. — lisaClust","text":"cells SegmentedCells, SingleCellExperiment, SpatialExperiment data frame contains least  variables x y, giving  coordinates cell, imageID cellType. k number regions cluster. Rs vector radii measures association calculated. spatialCoords columns contain x y spatial coordinates. cellType column contains cell types. imageID column contains image identifiers. regionName output column lisaClust regions. BPPARAM BiocParallelParam object. window window around regions 'square', 'convex' 'concave'. window.length tuning parameter controlling level concavity  estimating concave windows. whichParallel function use parallization imageID  cellType. sigma numeric variable used scaling filting inhomogeneous L-curves. lisaFunc Either \"K\" \"L\" curve. minLambda Minimum value density scaling fitting inhomogeneous L-curves. fast logical describing whether use fast approximation  inhomogeneous local L-curves.","code":""},{"path":"https://github.com/ellispatrick/lisaClust/reference/lisaClust.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Use k-means clustering to cluster local indicators of spatial association. For other clustering use lisa. — lisaClust","text":"matrix LISA curves","code":""},{"path":"https://github.com/ellispatrick/lisaClust/reference/lisaClust.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Use k-means clustering to cluster local indicators of spatial association. For other clustering use lisa. — lisaClust","text":"","code":"library(spicyR) # Read in data as a SegmentedCells objects isletFile <- system.file(\"extdata\",\"isletCells.txt.gz\", package = \"spicyR\") cells <- read.table(isletFile, header=TRUE) cellExp <- SegmentedCells(cells, cellProfiler = TRUE) #> There is no cellType column, setting to NA  # Cluster cell types markers <- cellMarks(cellExp) kM <- kmeans(markers,8) cellType(cellExp) <- paste('cluster',kM$cluster, sep = '')  # Generate LISA cellExp <- lisaClust(cellExp, k = 2) #> Generating local L-curves. If you run out of memory, try 'fast = FALSE'. #> Creating variable region"},{"path":"https://github.com/ellispatrick/lisaClust/reference/regionMap.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot heatmap of cell type enrichment for lisaClust regions — regionMap","title":"Plot heatmap of cell type enrichment for lisaClust regions — regionMap","text":"Plot heatmap cell type enrichment lisaClust regions","code":""},{"path":"https://github.com/ellispatrick/lisaClust/reference/regionMap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot heatmap of cell type enrichment for lisaClust regions — regionMap","text":"","code":"regionMap(   cells,   type = \"bubble\",   cellType = \"cellType\",   region = \"region\",   limit = c(0.33, 3),   ... )"},{"path":"https://github.com/ellispatrick/lisaClust/reference/regionMap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot heatmap of cell type enrichment for lisaClust regions — regionMap","text":"cells SegmentedCells, SingleCellExperiment, SpatialExperiment data.frame type Make \"bubble\" \"heatmap\" plot. cellType column storing cell types region column storing regions limit limits lower upper relative frequencies ... arguments passed pheatmap package","code":""},{"path":"https://github.com/ellispatrick/lisaClust/reference/regionMap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot heatmap of cell type enrichment for lisaClust regions — regionMap","text":"bubble plot heatmap","code":""},{"path":"https://github.com/ellispatrick/lisaClust/reference/regionMap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot heatmap of cell type enrichment for lisaClust regions — regionMap","text":"","code":"set.seed(51773) x <- round(c(runif(200),runif(200)+1,runif(200)+2,runif(200)+3,             runif(200)+3,runif(200)+2,runif(200)+1,runif(200)),4)*100 y <- round(c(runif(200),runif(200)+1,runif(200)+2,runif(200)+3,             runif(200),runif(200)+1,runif(200)+2,runif(200)+3),4)*100 cellType <- factor(paste('c',rep(rep(c(1:2),rep(200,2)),4),sep = '')) imageID <- rep(c('s1', 's2'),c(800,800))  cells <- data.frame(x, y, cellType, imageID)  cellExp <- spicyR::SegmentedCells(cells, cellTypeString = 'cellType') #> There is no cellID. I'll create these #> There is no image specific imageCellID. I'll create these  cellExp <- lisaClust(cellExp, k = 2) #> Generating local L-curves. If you run out of memory, try 'fast = FALSE'. #> Creating variable region  regionMap(cellExp)"},{"path":"https://github.com/ellispatrick/lisaClust/reference/scale_region.html","id":null,"dir":"Reference","previous_headings":"","what":"Scale constructor for regions — scale_region","title":"Scale constructor for regions — scale_region","text":"Region scale constructor.","code":""},{"path":"https://github.com/ellispatrick/lisaClust/reference/scale_region.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scale constructor for regions — scale_region","text":"","code":"scale_region(aesthetics = \"region\", ..., guide = \"legend\")  scale_region_manual(..., values)"},{"path":"https://github.com/ellispatrick/lisaClust/reference/scale_region.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scale constructor for regions — scale_region","text":"aesthetics names aesthetics scale works ... Arguments passed discrete_scale guide function used create guide name. See guides() info. values set aesthetic values map data values .  named vector, values matched based names. unnamed,  values matched order (usually alphabetical) limits scale.  data values match given na.value.","code":""},{"path":"https://github.com/ellispatrick/lisaClust/reference/scale_region.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Scale constructor for regions — scale_region","text":"ggplot guide","code":""},{"path":"https://github.com/ellispatrick/lisaClust/reference/scale_region.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Scale constructor for regions — scale_region","text":"","code":"library(spicyR) ## Generate toy data set.seed(51773) x <- round(c(runif(200),runif(200)+1,runif(200)+2,runif(200)+3,              runif(200)+3,runif(200)+2,runif(200)+1,runif(200)),4)*100  y <- round(c(runif(200),runif(200)+1,runif(200)+2,runif(200)+3,               runif(200),runif(200)+1,runif(200)+2,runif(200)+3),4)*100 cellType <- factor(paste('c',rep(rep(c(1:2),rep(200,2)),4),sep = '')) imageID <- rep(c('s1', 's2'),c(800,800)) cells <- data.frame(x, y, cellType, imageID)  ## Store data in SegmentedCells object cellExp <- SegmentedCells(cells) #> There is no cellID. I'll create these #> There is no image specific imageCellID. I'll create these  ## Generate regions cellExp <- lisaClust(cellExp, k = 2) #> Generating local L-curves. If you run out of memory, try 'fast = FALSE'. #> Creating variable region  # Plot the regions with hatchingPlot() hatchingPlot(cellExp) + scale_region_manual(values = c(1,4), labels = c(\"Region A\", \"Region B\"),  name = \"Regions\") #> Scale for region is already present. #> Adding another scale for region, which will replace the existing scale. #> Concave windows are temperamental. Try choosing values of window.length > and < 1 if you have problems."}]
